# EM runtime configuration options
#
# This template configuration file (em-odp.conf) is hardcoded
# during configure/build phase and the values defined here are used if
# optional EM_CONFIG_FILE is not set. This configuration file MUST
# include all configuration options.
#
# EM_CONFIG_FILE can be used to override default values and it doesn't
# have to include all available options. The missing options are
# replaced with hardcoded default values.
#
# The options defined here are implementation specific and valid option
# values should be checked from the implementation code.

# Mandatory fields
em_implementation = "em-odp"
config_file_version = "0.0.5"

# Pool options
pool: {
	# Enable EM pool usage statistics collection during runtime (true/false)
	#
	# Pool usage statistics is updated e.g. during em_alloc() and em_free(),
	# thus, if enabled, inducing some overhead. Pool information can be
	# obtained by calling em_pool_info() and, if pool usage statistics is
	# enabled, will return also pool usage statistics.
	statistics_enable = false

	# Alloc alignment in bytes, default = 0 (no extra alignment requirement)
	#
	# Set the exact alignment of the event payload start address (in bytes).
	# The event payload address returned by em_event_pointer(event) will
	# have the this alignment. Use power of two values only.
	#
	alloc_align = 0
}

# Queue options
queue: {
	# Default minimum number of events that a queue can hold.
	#
	# This value will be used in queue creation (em_queue_create*()) if no
	# other size information has been provided via the
	# em_queue_conf_t::min_events parameter.
	# Setting 'min_events_default = 0' will use the odp-implementation's
	# default values (might vary from one odp-implementation to another).
	min_events_default = 4096
}

# Event-Chaining options
event_chaining: {
	# Note:
	# The user _must_ provide an implementation for the overrideable
	# 'event_send_device()' and 'event_send_device_multi()' functions in
	# order to use Event-Chaining functionality!
	# The functions are declared with '__attribute__((weak))' in the EM-lib
	# to allow overriding.
	# Linking user code, which includes overrides for those functions,
	# against the EM-lib will replace the stubs with the user provided
	# variants.

	# Number of queues used for ordering event-chaining events
	#
	# Maintain the order of events sent to an another device from within
	# an EM ordered context (i.e. send from within the EO receive function
	# when handling an event from a parallel-ordered queue).
	# An event-chaining queue has no 'real' queue associated with it, the
	# queue-id simply indicates that events sent to the queue should be
	# sent out of EM via a user specified function (and perhaps out towards
	# another device). Sending events out of EM requires some intervention,
	# especially sending during an ordered context needs to maintain the
	# event order as determined by the context. To maintain event order for
	# event-chaining queues, em-odp uses a set of 'real' queues for order
	# tracking - the number of these queues is set by the following option:
	# (0 = no ordering)
	num_order_queues = 8
}